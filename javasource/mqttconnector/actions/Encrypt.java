// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mqttconnector.actions;

import com.mendix.core.Core;
import com.mendix.datahub.connector.mqtt.utils.CryptoException;
import com.mendix.datahub.connector.mqtt.utils.CryptoHelper;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

public class Encrypt extends CustomJavaAction<java.lang.String>
{
	private java.lang.String key;
	private java.lang.String plainString;

	public Encrypt(IContext context, java.lang.String key, java.lang.String plainString)
	{
		super(context);
		this.key = key;
		this.plainString = plainString;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		if(this.plainString == null || this.plainString.isBlank())
			throw new CryptoException("Plain String cannot be empty");
		var cryptoHelper = new CryptoHelper();
		try {
			cryptoHelper.inputAndKeyValidation(this.plainString, this.key);
		} catch (CryptoException exception) {
			Core.getLogger("MqttClient").error(exception.getMessage(), exception);
			throw exception;
		}
		if (this.plainString.startsWith("{AES")) {
			return this.plainString;
		}
		return cryptoHelper.encrypt(this.plainString, this.key);
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Encrypt";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
